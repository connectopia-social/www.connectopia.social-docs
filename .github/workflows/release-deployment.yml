---
#########################
#########################
## Deploy Docker Image ##
#########################
#########################

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

name: Release deployment

#######################################
# Start the job on all push to master #
#######################################
on:
  release:
    types: ['published']

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: job 1
    # Set the agent to run on
    runs-on: ubuntu-latest

    permissions:
      # write permission is required to create a deployment
      deployments: write
      # write permission is required to publish a package
      contents: read
      packages: write
  
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Start deployment       #
      ##########################
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: release
          desc: "depl_id: ${{ github.event.deployment.id }}, ref_id: ${{ github.head_ref }}"

     #############################
     # Init deployment variables #
     #############################
      - name: init deploymnet variables
        id: set_variables
        run: |
          echo ::set-output name=BUILD_RELEASE::${GITHUB_REF#refs/tags/}
          echo ::set-output name=BUILD_RELEASE_MAJOR::`echo ${GITHUB_REF%%.*} | awk -F/ '{ print v$3; }'`
          echo ::set-output name=BUILD_RELEASE_NUMBERS::`echo ${GITHUB_REF:1}`
          echo ::set-output name=BUILD_DATE::`date -u +'%Y-%m-%dT%H:%M:%SZ'`
          echo ::set-output name=BUILD_REPO::$(echo ${GITHUB_REPOSITORY} | awk -F/ '{ print $2; }')
      - name: print deploymnet variables
        run: |
          echo $BUILD_RELEASE
          echo $BUILD_RELEASE_MAJOR
          echo $BUILD_RELEASE_NUMBERS
          echo $BUILD_DATE
          echo $BUILD_REPO
        env:
          BUILD_RELEASE: ${{ steps.set_variables.outputs.BUILD_RELEASE }}
          BUILD_RELEASE_MAJOR: ${{ steps.set_variables.outputs.BUILD_RELEASE_MAJOR }}
          BUILD_RELEASE_NUMBERS: ${{ steps.set_variables.outputs.BUILD_RELEASE_NUMBERS }}
          BUILD_DATE: ${{ steps.set_variables.outputs.BUILD_DATE }}
          BUILD_REPO: ${{ steps.set_variables.outputs.BUILD_REPO }}

      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v2.3.4

      ########################
      # Setup Docker build X #
      ########################
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1

      ###############################
      # Login to DockerHub registry #
      ###############################
      #- name: Login to DockerHub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      ######################################
      # Login to GitHub Container registry #
      ######################################
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      ###########################################
      # Build and Push containers to registries #
      ###########################################
      - name: Build and push
        if: success()
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_REVISION=${{ github.sha }}
            BUILD_VERSION=${{ github.sha }}
            BUILD_REPO=${{ steps.set_variables.outputs.BUILD_REPO }}
            BUILD_RELEASE_NUMBERS=${{ steps.set_variables.outputs.BUILD_RELEASE_NUMBERS }}
          target: production
          push: true
          tags: |
            ghcr.io/connectopia-social/${{ steps.set_variables.outputs.BUILD_REPO }}:${{ steps.set_variables.outputs.BUILD_RELEASE }}
            ghcr.io/connectopia-social/${{ steps.set_variables.outputs.BUILD_REPO }}:${{ steps.set_variables.outputs.BUILD_RELEASE_MAJOR }}
            ghcr.io/connectopia-social/${{ steps.set_variables.outputs.BUILD_REPO }}:latest

      ##########################
      # Stop deployment        #
      ##########################
      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
